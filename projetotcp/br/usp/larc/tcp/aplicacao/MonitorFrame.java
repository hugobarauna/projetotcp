package br.usp.larc.tcp.aplicacao;

/*
 * @(#)MonitorFrame.java	1.0 18/08/2006
 *
 * Copyleft (L) 2006 Laboratório de Arquitetura e Redes de Computadores
 * Escola Politécnica da Universidade de São Paulo.
 *
 */

import br.usp.larc.tcp.protocolo.*;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

import java.util.Timer;
import java.util.TimerTask;

/** 
 * Classe que representa a Interface HM Monitor. Note que usamos a classe
 * Timer e TimerTask para atualizar a textArea que mostra a tabela de xonexão.
 * Você também poderá utilizar essas classes para implementar mecanismos de
 * timeout (temporarização e timestamp de pacotes). 
 *
 * Mais detalhes e dicas de implementação podem ser consultadas nas Apostilas.
 * 
 *
 * Procure sempre usar o paradigma Orientado a Objeto, a simplicidade e a 
 * criatividade na implementação do seu projeto.
 *  
 *
 * @author	Laboratório de Arquitetura e Redes de Computadores.
 * @version	1.0 Agosto 2003.
 */
public class MonitorFrame extends javax.swing.JFrame {
    
   /** Creates new form Monitor */
    public MonitorFrame() {
        initComponents();
    }
    
    /** Creates new form Monitor */
    public MonitorFrame(ProtocoloTCP _protocoloTCP) {
        this.initComponents();
        this.setSize(460,365);
        this.show();
        this.protocoloTCP = _protocoloTCP;
        this.timerAtualizaTabelaDeConexoes.schedule(
            new RemindTask(), 1 * 1000, 2 * 1000);
        this.habilitaInterface(false);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabelTitulo1 = new javax.swing.JLabel();
        jLabelTitulo2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextAreaPortaTCPNovaMaquina = new javax.swing.JTextArea();
        jLabelIdDeConexao = new javax.swing.JLabel();
        jTextFieldPortaTCPNovaMaquina = new javax.swing.JTextField();
        jTextFieldIdDeConexao = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButtonCriarNovaMaquina = new javax.swing.JButton();
        jButtonFecharMaquina = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButtonIniciarTCP = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaTabelaDeConexoes = new javax.swing.JTextArea();

        setTitle("MonitorFrame / Copyleft (F)2003 LARC/USP");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(null);

        jPanel1.setPreferredSize(new java.awt.Dimension(325, 24));
        jLabelTitulo1.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabelTitulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo1.setText("Gerenciador de M\u00e1quinas de Estados:");
        jLabelTitulo1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelTitulo1.setPreferredSize(new java.awt.Dimension(460, 24));
        jLabelTitulo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelTitulo1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel1.add(jLabelTitulo1);
        jLabelTitulo1.setBounds(10, 0, 350, 24);

        jLabelTitulo2.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabelTitulo2.setForeground(new java.awt.Color(204, 0, 0));
        jLabelTitulo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo2.setText("Desativado");
        jLabelTitulo2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelTitulo2.setPreferredSize(new java.awt.Dimension(460, 24));
        jLabelTitulo2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelTitulo2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel1.add(jLabelTitulo2);
        jLabelTitulo2.setBounds(350, 0, 100, 24);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Gerenciador de M\u00e1quinas de Estado"));
        jPanel2.setAlignmentX(0.0F);
        jPanel2.setAlignmentY(0.0F);
        jPanel2.setPreferredSize(new java.awt.Dimension(460, 106));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextAreaPortaTCPNovaMaquina.setBackground(new java.awt.Color(204, 204, 204));
        jTextAreaPortaTCPNovaMaquina.setEditable(false);
        jTextAreaPortaTCPNovaMaquina.setFont(new java.awt.Font("Dialog", 0, 11));
        jTextAreaPortaTCPNovaMaquina.setLineWrap(true);
        jTextAreaPortaTCPNovaMaquina.setRows(2);
        jTextAreaPortaTCPNovaMaquina.setText("Porta TCP da novam\u00e1quina: ");
        jTextAreaPortaTCPNovaMaquina.setBorder(null);
        jTextAreaPortaTCPNovaMaquina.setPreferredSize(new java.awt.Dimension(90, 30));
        jTextAreaPortaTCPNovaMaquina.setAutoscrolls(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jTextAreaPortaTCPNovaMaquina, gridBagConstraints);

        jLabelIdDeConexao.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabelIdDeConexao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelIdDeConexao.setText("Id de Conex\u00e3o:");
        jLabelIdDeConexao.setPreferredSize(new java.awt.Dimension(130, 16));
        jLabelIdDeConexao.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jLabelIdDeConexao, gridBagConstraints);

        jTextFieldPortaTCPNovaMaquina.setColumns(3);
        jTextFieldPortaTCPNovaMaquina.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldPortaTCPNovaMaquina.setBorder(new javax.swing.border.EtchedBorder());
        jTextFieldPortaTCPNovaMaquina.setMaximumSize(new java.awt.Dimension(33, 25));
        jTextFieldPortaTCPNovaMaquina.setPreferredSize(new java.awt.Dimension(33, 25));
        jTextFieldPortaTCPNovaMaquina.setAutoscrolls(false);
        jTextFieldPortaTCPNovaMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPortaTCPNovaMaquinaActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jTextFieldPortaTCPNovaMaquina, gridBagConstraints);

        jTextFieldIdDeConexao.setColumns(3);
        jTextFieldIdDeConexao.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldIdDeConexao.setBorder(new javax.swing.border.EtchedBorder());
        jTextFieldIdDeConexao.setPreferredSize(new java.awt.Dimension(33, 25));
        jTextFieldIdDeConexao.setAutoscrolls(false);
        jTextFieldIdDeConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdDeConexaoActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jTextFieldIdDeConexao, gridBagConstraints);

        jPanel2.add(jPanel4, java.awt.BorderLayout.WEST);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButtonCriarNovaMaquina.setFont(new java.awt.Font("Dialog", 0, 11));
        jButtonCriarNovaMaquina.setText("Criar Nova M\u00e1quina");
        jButtonCriarNovaMaquina.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCriarNovaMaquina.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonCriarNovaMaquina.setPreferredSize(new java.awt.Dimension(128, 25));
        jButtonCriarNovaMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarNovaMaquinaActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jButtonCriarNovaMaquina, gridBagConstraints);

        jButtonFecharMaquina.setFont(new java.awt.Font("Dialog", 0, 11));
        jButtonFecharMaquina.setText("Fechar M\u00e1quina");
        jButtonFecharMaquina.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonFecharMaquina.setPreferredSize(new java.awt.Dimension(128, 25));
        jButtonFecharMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharMaquinaActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jButtonFecharMaquina, gridBagConstraints);

        jPanel5.add(jPanel6, java.awt.BorderLayout.WEST);

        jPanel7.setLayout(new java.awt.GridLayout(3, 0, 5, 5));

        jButtonIniciarTCP.setFont(new java.awt.Font("Dialog", 0, 11));
        jButtonIniciarTCP.setText("Iniciar TCP");
        jButtonIniciarTCP.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonIniciarTCP.setPreferredSize(new java.awt.Dimension(54, 25));
        jButtonIniciarTCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarTCPActionPerformed(evt);
            }
        });

        jPanel7.add(jButtonIniciarTCP);

        jButtonFechar.setFont(new java.awt.Font("Dialog", 0, 11));
        jButtonFechar.setText("Fechar");
        jButtonFechar.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonFechar.setPreferredSize(new java.awt.Dimension(54, 25));
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jPanel7.add(jButtonFechar);

        jButtonReset.setFont(new java.awt.Font("Dialog", 0, 11));
        jButtonReset.setText("Reset");
        jButtonReset.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonReset.setPreferredSize(new java.awt.Dimension(54, 25));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jPanel7.add(jButtonReset);

        jPanel5.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Tabela de Conex\u00f5es"));
        jPanel3.setPreferredSize(new java.awt.Dimension(460, 189));
        jTextAreaTabelaDeConexoes.setRows(10);
        jScrollPane1.setViewportView(jTextAreaTabelaDeConexoes);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void jButtonFecharMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharMaquinaActionPerformed
        // Add your handling code here:
        try {
            String argumentos[]  = {""};
            argumentos[0] = (String) this.jTextFieldIdDeConexao.getText();
            this.protocoloTCP.recebePrimitivaAplicacao            
                (ProtocoloTCP.P_TCP_CLOSE_ME, argumentos);
             this.jTextFieldIdDeConexao.setText("");
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }        
    }//GEN-LAST:event_jButtonFecharMaquinaActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        // Add your handling code here:
        try {
            String argumentos[]  = {""};
            this.protocoloTCP.recebePrimitivaAplicacao            
                (ProtocoloTCP.P_TCP_CLOSE, argumentos);
            this.habilitaInterface(false);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonCriarNovaMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarNovaMaquinaActionPerformed
        // Add your handling code here:
        try {
            String argumentos[]  = {""};
            argumentos[0] = (String) jTextFieldPortaTCPNovaMaquina.getText();
            this.protocoloTCP.recebePrimitivaAplicacao            
                (ProtocoloTCP.P_TCP_OPEN_ME, argumentos);
            jTextFieldPortaTCPNovaMaquina.setText("");
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButtonCriarNovaMaquinaActionPerformed
    
    private void jTextFieldIdDeConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdDeConexaoActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextFieldIdDeConexaoActionPerformed
    
    private void jTextFieldPortaTCPNovaMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPortaTCPNovaMaquinaActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jTextFieldPortaTCPNovaMaquinaActionPerformed
    
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
    	
    	Monitor monitor = protocoloTCP.getMonitor();
    	monitor.reinicia();
        // Add your handling code here:
    }//GEN-LAST:event_jButtonResetActionPerformed
    
    private void jButtonIniciarTCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarTCPActionPerformed
        // Add your handling code here:
        try {
            String argumentos [] = null;
            this.protocoloTCP.recebePrimitivaAplicacao            
                (ProtocoloTCP.P_TCP_OPEN, argumentos);
            this.habilitaInterface(true);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jButtonIniciarTCPActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    private void habilitaInterface(boolean _flag) {
            if (_flag) {
                this.jLabelTitulo2.setForeground(new java.awt.Color(0, 153, 0));
                this.jLabelTitulo2.setHorizontalAlignment(
                    javax.swing.SwingConstants.CENTER);
                this.jLabelTitulo2.setText("Ativado");
            } else {
                this.jLabelTitulo2.setForeground(new java.awt.Color(204, 0, 0));
                this.jLabelTitulo2.setHorizontalAlignment(
                    javax.swing.SwingConstants.CENTER);
                this.jLabelTitulo2.setText("Desativado");
            }
            
            this.jButtonFechar.setEnabled(_flag);
            this.jButtonFecharMaquina.setEnabled(_flag);
            this.jButtonReset.setEnabled(_flag);
            this.jButtonCriarNovaMaquina.setEnabled(_flag);
            this.jTextFieldPortaTCPNovaMaquina.setEditable(_flag);
            this.jButtonIniciarTCP.setEnabled(!_flag);

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        MonitorFrame monitorf = new MonitorFrame();
        monitorf.setSize(460,365);
        monitorf.show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabelIdDeConexao;
    private javax.swing.JLabel jLabelTitulo2;
    private javax.swing.JTextArea jTextAreaPortaTCPNovaMaquina;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextArea jTextAreaTabelaDeConexoes;
    private javax.swing.JTextField jTextFieldIdDeConexao;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jLabelTitulo1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton jButtonIniciarTCP;
    private javax.swing.JButton jButtonCriarNovaMaquina;
    private javax.swing.JButton jButtonFecharMaquina;
    private javax.swing.JTextField jTextFieldPortaTCPNovaMaquina;
    // End of variables declaration//GEN-END:variables
    private ProtocoloTCP protocoloTCP;
    private Timer timerAtualizaTabelaDeConexoes = new Timer();;
    
    class RemindTask extends TimerTask {

		public void run() {
                        try {

                        jTextAreaTabelaDeConexoes.setText(
				protocoloTCP.getMonitor(
                                ).getTabelaDeConexoes().toString());
			boolean existeMaquinas =
				!protocoloTCP.getMonitor(
                                ).getTabelaDeConexoes().isEmpty();
			jButtonFecharMaquina.setEnabled(existeMaquinas);
			jTextFieldIdDeConexao.setEditable(existeMaquinas);
                        
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null,ex.getMessage());
                        }

		}
    }

}//fim da classe MonitorFrame 2006